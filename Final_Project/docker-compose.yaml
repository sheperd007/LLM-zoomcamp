services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-course_assistant}
      POSTGRES_USER: ${POSTGRES_USER:-your_username}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-your_username}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DATA_PATH: ${DATA_PATH:-data/data.csv}
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-course_assistant}
      POSTGRES_USER: ${POSTGRES_USER:-your_username}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_password}
      TZ: ${TZ:-UTC}
      RUN_TIMEZONE_CHECK: ${RUN_TIMEZONE_CHECK:-1}
    ports:
      - "${APP_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_USERS_AUTO_ASSIGN_ORG=true
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-your_secret_key_here}
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  grafana_data: